{"version":3,"sources":["components/Coordinate/worldMap.jpg","components/Coordinate/Coordinate.js","components/Coordinate/CoordinateInput.js","container/CoordinateContainer.js"],"names":["CoordinateComponent","styled","div","Coordinate","buoy","buoyStyle","imgStyle","wheelHandler","dragStartHandler","dragHandler","imgRef","useRef","positionScale","scale","yMax","yMin","xMax","xMin","className","style","backgroundImage","worldMap","ref","onWheel","e","onDragStart","onDragOver","draggable","CoordinateInputComponent","CoordinateInput","directionChangeHandler","coordinateChangeHandler","coordinateCheckPointHandler","Form","map","v","Check","inline","type","name","label","onChange","defaultChecked","onClick","buoyX","buoyY","zoom","posY","posX","backgroundPositionY","backgroundPositionX","Container","CoordinateContainer","useState","inputX","setInputX","inputY","setInputY","x","y","direction","setDirection","setBuoy","setBuoyStyle","transform","setImgStyle","a","nativeEvent","wheelDelta","clientX","clientY","positionData","filter","current","styleBackgroundPositionX","match","join","styleBackgroundPositionY","id","includes","coordinate","index","newCoordinate","target","value","console","log"],"mappings":"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","file":"static/js/7.4a251347.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/worldMap.29ca12a1.jpg\";","/* LIBRARY */\r\nimport React, { useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { MdWhereToVote } from 'react-icons/md';\r\n\r\n/* DATA */\r\nimport worldMap from './worldMap.jpg';\r\n\r\nconst CoordinateComponent = styled.div`\r\n  width: 100%;\r\n  .coordinate-world {\r\n    position: relative;\r\n    height: 95vh;\r\n    overflow: hidden;\r\n    display: flex;\r\n    .img {\r\n      position: relative;\r\n      display: flex;\r\n      width: 100%;\r\n      height: 180vh;\r\n      background-repeat: no-repeat;\r\n      background-size: cover;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .buoy {\r\n    position: absolute;\r\n    width: 15px;\r\n    height: 15px;\r\n    display: flex;\r\n    color: red;\r\n    left: 0;\r\n    top: 0;\r\n  }\r\n`;\r\n\r\nconst Coordinate = ({\r\n  buoy,\r\n  buoyStyle,\r\n  imgStyle,\r\n  wheelHandler,\r\n  dragStartHandler,\r\n  dragHandler,\r\n}) => {\r\n  /* 이미지 태그를 선택하기 위한 ref */\r\n  const imgRef = useRef();\r\n  /* scale값에 대한 x,y축 최소,최대값 */\r\n  const positionScale = [\r\n    { scale: 1, yMax: -2, yMin: -802, xMax: -2, xMin: -10 },\r\n    { scale: 2, yMax: 425, yMin: -820, xMax: 400, xMin: -400 },\r\n    { scale: 3, yMax: 525, yMin: -820, xMax: 500, xMin: -500 },\r\n    { scale: 4, yMax: 625, yMin: -820, xMax: 600, xMin: -600 },\r\n    { scale: 5, yMax: 625, yMin: -820, xMax: 600, xMin: -600 },\r\n    { scale: 6, yMax: 625, yMin: -820, xMax: 600, xMin: -600 },\r\n    { scale: 7, yMax: 625, yMin: -820, xMax: 600, xMin: -600 },\r\n  ];\r\n\r\n  return (\r\n    <CoordinateComponent>\r\n      <div className=\"coordinate-world\">\r\n        <div\r\n          className=\"img\"\r\n          style={{ backgroundImage: `url(${worldMap})`, ...imgStyle }}\r\n          ref={imgRef}\r\n          onWheel={(e) => wheelHandler(e)}\r\n          onDragStart={(e) => dragStartHandler(e)}\r\n          onDragOver={(e) => dragHandler(e, positionScale, imgRef)}\r\n          draggable={true}\r\n        >\r\n          {buoy && <MdWhereToVote className=\"buoy\" style={buoyStyle} />}\r\n        </div>\r\n      </div>\r\n    </CoordinateComponent>\r\n  );\r\n};\r\n\r\nexport default Coordinate;\r\n","/* LIBRARY */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst CoordinateInputComponent = styled.div`\r\n  height: 100%;\r\n  width: 40vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 10rem;\r\n  .coord-input {\r\n    width: 50px;\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst CoordinateInput = ({\r\n  directionChangeHandler,\r\n  coordinateChangeHandler,\r\n  coordinateCheckPointHandler,\r\n}) => {\r\n  return (\r\n    <CoordinateInputComponent>\r\n      <Form>\r\n        <div className=\"mb-3\">\r\n          {['W', 'E'].map((v) => (\r\n            <Form.Check\r\n              inline\r\n              type=\"radio\"\r\n              key={`default-${v}`}\r\n              name=\"direction-x\"\r\n              label={v}\r\n              onChange={() => directionChangeHandler(v)}\r\n              defaultChecked={v === 'W' && true}\r\n            />\r\n          ))}\r\n          {[0, 1, 2].map((v) => (\r\n            <input\r\n              onChange={(e) => coordinateChangeHandler(e, 'X', v)}\r\n              className=\"coord-input\"\r\n              key={`direction-x-${v}`}\r\n            />\r\n          ))}\r\n        </div>\r\n      </Form>\r\n      <Form>\r\n        <div className=\"mb-3\">\r\n          {['S', 'N'].map((v) => (\r\n            <Form.Check\r\n              inline\r\n              type=\"radio\"\r\n              key={`default-${v}`}\r\n              name=\"direction-y\"\r\n              label={v}\r\n              onChange={() => directionChangeHandler(v)}\r\n              defaultChecked={v === 'S' && true}\r\n            />\r\n          ))}\r\n          {[0, 1, 2].map((v) => (\r\n            <input\r\n              onChange={(e) => coordinateChangeHandler(e, 'Y', v)}\r\n              className=\"coord-input\"\r\n              key={`direction-y-${v}`}\r\n            />\r\n          ))}\r\n        </div>\r\n      </Form>\r\n      <button\r\n        onClick={coordinateCheckPointHandler}\r\n        className=\"btn btn-primary w-75 p-3\"\r\n      >\r\n        확인\r\n      </button>\r\n    </CoordinateInputComponent>\r\n  );\r\n};\r\n\r\nexport default CoordinateInput;\r\n","/* LIBRARY */\r\nimport React, { useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n/* COMPONENT */\r\nimport Coordinate from '../components/Coordinate/Coordinate';\r\nimport CoordinateInput from '../components/Coordinate/CoordinateInput';\r\n\r\n/* 부표 포지션 변경을 위한 변수 */\r\nlet buoyX = 0;\r\nlet buoyY = 0;\r\n/* 이미지 스케일을 위한 변수 */\r\nlet zoom = 2;\r\n/* 전 화면 동작의 축을 저장하기 위한 변수 */\r\nlet posY = 0;\r\nlet posX = 0;\r\n/* 백그라운드 포지션 변경을 위한 변수 */\r\nlet backgroundPositionY = -300;\r\nlet backgroundPositionX = 0;\r\n\r\n/* 컨테이너 스타일 */\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  background-color: #f9f9f9;\r\n`;\r\n\r\nconst CoordinateContainer = ({ worldMap }) => {\r\n  /* 좌표 INPUT창의 값을 저장하기 위한 state */\r\n  const [inputX, setInputX] = useState([0, 0, 0]);\r\n  const [inputY, setInputY] = useState([0, 0, 0]);\r\n  /* 방향 */\r\n  const [direction, setDirection] = useState({ x: 'W', y: 'S' });\r\n  /* 부표 */\r\n  const [buoy, setBuoy] = useState(false);\r\n  /* 이미지와 부표의 스타일 */\r\n  const [buoyStyle, setBuoyStyle] = useState({});\r\n  const [imgStyle, setImgStyle] = useState({\r\n    transform: 'scale(2)',\r\n    backgroundPositionY: '-300px',\r\n    backgroundPositionX: '0px',\r\n  });\r\n\r\n  /* 좌표 INPUT창 ONCHANGE */\r\n  const coordinateChangeHandler = (e, coordinate, index) => {\r\n    const newCoordinate = coordinate === 'X' ? [...inputX] : [...inputY];\r\n    newCoordinate[index] = e.target.value;\r\n    coordinate === 'X' ? setInputX(newCoordinate) : setInputY(newCoordinate);\r\n    console.log(inputY, inputX);\r\n  };\r\n\r\n  /* 방향 변경 */\r\n  const directionChangeHandler = (id) => {\r\n    if (['W', 'E'].includes(id)) {\r\n      return setDirection({ ...direction, x: id });\r\n    } else {\r\n      return setDirection({ ...direction, y: id });\r\n    }\r\n  };\r\n\r\n  /* 좌표 확인 클릭 */\r\n  const coordinateCheckPointHandler = async () => {\r\n    const x =\r\n      +inputX[0] + (+inputX[1] * 1.67) / 100 + (+inputX[2] * 1.67) / 10000;\r\n    const y =\r\n      +inputY[0] + (+inputY[1] * 1.67) / 100 + (+inputY[2] * 1.67) / 10000;\r\n    const moveX = 49.2;\r\n    const moveY = 50.5;\r\n    buoyX = direction.x === 'W' ? 1030 - moveX * x : 1030 + moveX * x;\r\n    buoyY = direction.y === 'S' ? 75 + moveY * y : 75 - moveY * y;\r\n    await setImgStyle({\r\n      ...imgStyle,\r\n      transform: 'scale(1)',\r\n      backgroundPositionY: `${-300}px`,\r\n      backgroundPositionX: `${0}px`,\r\n    });\r\n    await setBuoyStyle({\r\n      transform: `translate3d(${buoyX}px ,${buoyY}px, 0px)`,\r\n    });\r\n    await setBuoy(true);\r\n  };\r\n\r\n  /* ZOOM IN/OUT */\r\n  const wheelHandler = async (e) => {\r\n    /* 휠을 사용 했을때 zoom변수를 +- 함으로써 scale값을 조정 */\r\n    if (zoom >= 2 && zoom < 8) {\r\n      if (e.nativeEvent.wheelDelta > 0) zoom < 7 && zoom++;\r\n      else zoom >= 3 && zoom--;\r\n      await setImgStyle({ ...imgStyle, transform: `scale(${zoom})` });\r\n    }\r\n  };\r\n\r\n  const dragStartHandler = (e) => {\r\n    /* 드래그 시작할 때 현재의 좌표를 저장 */\r\n    posX = e.clientX;\r\n    posY = e.clientY;\r\n  };\r\n\r\n  /* 드래그 ing */\r\n  const dragHandler = (e, positionScale, imgRef) => {\r\n    /* 현재 zoom 상황따라 다른 최소, 최대값을 가지기 위한 변수 */\r\n    const positionData = positionScale.filter(\r\n      (v) => `scale(${v.scale})` === imgRef.current.style.transform,\r\n    )[0];\r\n    /* 현재 변수에 저장 되어있는 변수와 background-position의 좌표가 다르면 그 만큼 +-  */\r\n    const styleBackgroundPositionX = +imgRef.current.style.backgroundPositionX\r\n      .match(/[\\-\\+0-9]/g)\r\n      .join('');\r\n    const styleBackgroundPositionY = +imgRef.current.style.backgroundPositionY\r\n      .match(/[\\-\\+0-9]/g)\r\n      .join('');\r\n    if (styleBackgroundPositionX !== backgroundPositionX) {\r\n      buoyX = buoyX - (styleBackgroundPositionX - backgroundPositionX);\r\n    }\r\n    if (styleBackgroundPositionY !== backgroundPositionY) {\r\n      buoyY = buoyY - (styleBackgroundPositionY - backgroundPositionY);\r\n    }\r\n    /* 화면을 옮기면 background-position의 좌표를 천천히 올리고 내림 */\r\n    if (e.clientX > posX && backgroundPositionX <= positionData.xMax) {\r\n      backgroundPositionX += 2;\r\n      buoyX += 2;\r\n    } else if (e.clientX < posX && backgroundPositionX > positionData.xMin) {\r\n      backgroundPositionX -= 2;\r\n      buoyX -= 2;\r\n    }\r\n    if (e.clientY > posY && backgroundPositionY <= positionData.yMax) {\r\n      backgroundPositionY += 2;\r\n      buoyY += 2;\r\n    } else if (e.clientY < posY && backgroundPositionY > positionData.yMin) {\r\n      backgroundPositionY -= 2;\r\n      buoyY -= 2;\r\n    }\r\n\r\n    /* 다음 타겟의 좌표와 비교하기 위해 현재의 타겟 위치를 변수에 저장 */\r\n    posY = e.clientY;\r\n    posX = e.clientX;\r\n    /* 위 작업에서 바뀐 변수들을 이용해 스타일 변경 */\r\n    setImgStyle({\r\n      ...imgStyle,\r\n      backgroundPositionY: `${backgroundPositionY}px`,\r\n      backgroundPositionX: `${backgroundPositionX}px`,\r\n    });\r\n    setBuoyStyle({ transform: `translate3d(${buoyX}px ,${buoyY}px, 0px)` });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Coordinate\r\n        imgStyle={imgStyle}\r\n        direction={direction}\r\n        buoy={buoy}\r\n        buoyStyle={buoyStyle}\r\n        wheelHandler={wheelHandler}\r\n        dragStartHandler={dragStartHandler}\r\n        dragHandler={dragHandler}\r\n      />\r\n      <CoordinateInput\r\n        directionChangeHandler={directionChangeHandler}\r\n        coordinateChangeHandler={coordinateChangeHandler}\r\n        coordinateCheckPointHandler={coordinateCheckPointHandler}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CoordinateContainer;\r\n"],"sourceRoot":""}